@model OfficeLocationMicroservice.WebUi.Models.OfficeModel

@{
    ViewBag.Title = "Index";
}

<head>
    <link href="~/Content/buttonStyle.css" rel="stylesheet" />
    <link href="~/Content/SharedOfficelocationStyles.css" rel="stylesheet" />
    <style>
        .card:hover {
            box-shadow: 0 8px 10px 0 #000000, 0 8px 20px 0 #000000;
            box-shadow: 0 8px 10px 0 rgba(0, 0, 0, 0.2), 0 8px 20px 0 rgba(0, 0, 0, 0.19);
        }

        .cardContainer {
            z-index: 10;
            width: inherit;
            height: 100%;
            justify-content: center;
            flex-wrap: wrap;
            display: flex;
        }


        .modal {
            overflow-y: auto;
            padding-right: 0px !important;
        }

        .modal-open {
            overflow: auto;
            padding-right: 0px !important;
            margin-right: 0px !important;
        }

        .navbar-fixed-top {
            padding-right:0px!important;
            margin-right: 0px !important;
        }

    </style>
</head>

@*style="overflow-y:hidden"*@
<body id="body" >
    <div class="myContainer">
        <h2>Office Locations</h2>
    <div>
    <span class ="addButtonSpan" style="clear: both;">
        <button type="submit" class="addButton"  data-toggle="modal" data-target="#emptyModals">
            <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add Item
        </button> 
    </span>

    <br/>


        <div class="cardContainer">
            @foreach (var office in Model.Offices)
            {
                <div class="card"  onclick="toggleModal(@office.Office.OfficeId);" >
                    <h4>@office.Office.Name</h4>
                    <div class="details">
                        @office.Office.Address <br />
                        @office.Office.Country <br />
                        Switchboard:
                        @office.Office.Switchboard <br />
                        Fax: @office.Office.Fax <br />
                        @office.Office.TimeZone <br />
                        @office.Office.Operating
                    </div>

                </div>
            }

        </div>
        
    <div id="plainModals">

            @for (var i=0; i < Model.Offices.Length; i++)
            {

                <div class="modal fade" id="plain_@Model.Offices[i].Office.OfficeId" data-backdrop="static" data-keyboard="false">
                    <div class="modal-dialog">
                        <div class="modal-content">

                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">@Model.Offices[i].Office.Name</h4>
                            </div>

                            <div class="modal-body">
                                
                                <div class="form-group">
                                    <label for="office">Office</label>
                                    @Html.TextBoxFor(m => m.Offices[i].Office.Name, new
                                    {
                                        @placeholder = "Type Office Here",
                                        @class = "form-control-static",
                                        @rows = "1",
                                        @id = "Office",
                                        @style = "min-width: 100%;",
                                        @readonly = true
                                    })
                                </div>

                                <div class="form-group">
                                    <label for="Address">Address</label>
                                    @Html.TextAreaFor(m => m.Offices[i].Office.Address, 3, 100, new
                                    {
                                        @placeholder = "Type Address Here",
                                        @class = "form-control-static",
                                        @rows = "1",
                                        @id = "Address",
                                        @style = "min-width: 100%;",
                                        @readonly = true
                                    })

                                    @Html.DropDownListFor(m => m.Offices[i].Office.Country, Model.Offices[i].Countries, null, new {
                                   @Select = Model.Offices[i].Office.Country, @class = "form-control-static",
                                   @disabled = "disabled" })

                                </div>

                                <div class="form-group">
                                    <label for="switchboard">Switchboard</label>
                                    @Html.TextBoxFor(m => m.Offices[i].Office.Switchboard, new
                                    {
                                        @placeholder = "Type Switchboard Here",
                                        @class = "form-control-static",
                                        @rows = "1",
                                        @id = "switchboard",
                                        @style = "min-width: 100%;",
                                        @readonly = true
                                    })
                                </div>

                                <div class="form-group">
                                    <label for="Fax">Fax</label>
                                    @Html.TextBoxFor(m => m.Offices[i].Office.Fax, new
                                    {
                                        @placeholder = "Type Fax Here",
                                        @class = "form-control-static",
                                        @rows = "1",
                                        @id = "Fax",
                                        @style = "min-width: 100%;",
                                        @readonly = true
                                    })
                                </div>

                                <div class="form-group">
                                    <label for="timezone">Timezone</label>
                                                                        @*  @Html.DropDownListFor(m => m.OfficeEdit.NewTimeZone, null, null, new { @class = "form-control",
        @disabled = "disabled" })
                                                                        *@
                                </div>

                                <div class="form-group">
                                    <label for="operating">Operating</label>
                                    @Html.DropDownListFor(m => m.Offices[i].Office.Operating, Model.Offices[i].OperatingOptions, null, 
                                   new { @class = "form-control-static",
                                   @disabled = "disabled"
                               })

                                </div>

                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" data-toggle="modal" 
                                        data-dismiss="modal" data-target="#modal_@Model.Offices[i].Office.OfficeId" onclick="enablebody();">Edit</button>
                            </div>

                        </div>
                    </div>
                </div>
            }
        </div>



    <div id="modals">

            @for (var i=0; i < Model.Offices.Length; i++)
        {

                <div class="modal fade" id="modal_@Model.Offices[i].Office.OfficeId" data-backdrop="static" data-keyboard="false"
                >
                <div class="modal-dialog">
                    <div class="modal-content">

                        @using (Html.BeginForm("Save", "OfficeLocation", FormMethod.Post))
                        {
                                @Html.HiddenFor(m => m.Offices[i].Office.OfficeId, new { value = @Model.Offices[i].Office.OfficeId });

                            <div class="modal-header">
                                    <button type="button" class="close" onclick="modalCheck(@Model.Offices[i].Office.OfficeId);" >&times;</button>
                                <h4 class="modal-title">Edit</h4>
                            </div>

                            <div class="modal-body">
                                <form action>

                                    <div class="form-group">
                                        <label for="office">Office</label>
                                        @Html.TextBoxFor(m => m.Offices[i].Office.Name, new
                                   {
                                       @placeholder = "Type Office Here",
                                       @class = "form-control",
                                       @rows = "1",
                                       @id = "Office" + Model.Offices[i].Office.OfficeId,
                                       @style = "min-width: 100%;"
                                   })
                                    </div>

                                    <div class="form-group">
                                        <label for="Address">Address</label>
                                        @Html.TextAreaFor(m => m.Offices[i].Office.Address, 3, 100, new
                                   {
                                       @placeholder = "Type Address Here",
                                       @class = "form-control",
                                       @id = "Address" + Model.Offices[i].Office.OfficeId,
                                       @style = "min-width: 100%;"
                                   })

                                        @Html.DropDownListFor(m => m.Offices[i].Office.Country, Model.Offices[i].Countries, null, new
                                   {
                                       @selected = Model.Offices[i].Office.Country,
                                       @class = "form-control",
                                       @id = "Country" + Model.Offices[i].Office.OfficeId
                                   })

                                    </div>

                                    <div class="form-group">
                                        <label for="switchboard">Switchboard</label>
                                        @Html.TextBoxFor(m => m.Offices[i].Office.Switchboard, new
                                   {
                                       @placeholder = "Type Switchboard Here",
                                       @class = "form-control",
                                       @rows = "1",
                                       @id = "Switchboard",
                                       @style = "min-width: 100%;"
                                   })
                                    </div>

                                    <div class="form-group">
                                        <label for="Fax">Fax</label>
                                        @Html.TextBoxFor(m => m.Offices[i].Office.Fax, new
                                   {
                                       @placeholder = "Type Fax Here",
                                       @class = "form-control",
                                       @rows = "1",
                                       @id = "Fax",
                                       @style = "min-width: 100%;"
                                   })
                                    </div>

                                    <div class="form-group">
                                        <label for="timezone">Timezone</label>
                                        @*  @Html.DropDownListFor(m => m.OfficeEdit.NewTimeZone, null, null, new {
                                                @class = "form-control",
                                                @id = "Timezone" + Model.Offices[i].Office.OfficeId
                                        })
                                        *@
                                    </div>

                                    <div class="form-group">
                                        <label for="operating">Operating</label>
                                        @Html.DropDownListFor(m => m.Offices[i].Office.Operating, Model.Offices[i].OperatingOptions, null,
                                        new
                                        {
                                            @class = "form-control",
                                            @id = "Operating" + Model.Offices[i].Office.OfficeId,
                                        })

                                    </div>

                                </form>

                            </div>
                            
                            <div class="modal-footer">
                                    <button type="button" class="btn btn-default" onclick="modalCheck(@Model.Offices[i].Office.OfficeId);">Close</button>
                                <button type="submit" class="btn btn-primary">Save changes</button>
@*                                <button type="submit" onclick="checkAll(@Model.Offices[i].Office.OfficeId)"> Test</button>*@
                            </div>

                        }
                    </div>
                </div>
            </div>

       @*     <script>
                function check_@office.OfficeId () {
                    if (confirm('Are you sure you want to cancel. You will lose your unsaved changes')) {
                        $('#modal_@office.OfficeId').modal('hide')
                    }
                }
            </script>*@
            }     
    </div>
        
        
        
    <div id="newModals">

        @foreach (var office in Model.Offices)
        {

            <div class="modal fade" id="emptyModals" data-backdrop="static" data-keyboard="false">
                <div class="modal-dialog">
                    <div class="modal-content">

                        <div class="modal-header">
                            <button type="button" class="close" onclick="close_newModal ();">&times;</button>
                            <h4 class="modal-title">New Item</h4>
                        </div>

                        <div class="modal-body">
                            <div class="form-group">
                                <label for="office">Office</label>
                                @Html.TextBox("OfficeName", "", new { @class = "form-control" })  
                            </div>

                            <div class="form-group">
                                <label for="Address">Address</label>
                                @Html.TextArea("OfficeAddress", "", new { @class = "form-control" })

                                @Html.DropDownListFor(m => m.Offices[0].Countries, Model.Offices[0].Countries, "", new { @class = "form-control" })

                            </div>

                            <div class="form-group">
                                <label for="switchboard">Switchboard</label>
                                @Html.TextBox("OfficeSwitchboard", "", new { @class = "form-control" })  
                            </div>

                            <div class="form-group">
                                <label for="Fax">Fax</label>
                                @Html.TextBox("OfficeFax", "", new { @class = "form-control" })  
                            </div>

                            <div class="form-group">
                                <label for="timezone">Timezone</label>
                                @*  @Html.DropDownListFor(m => m.OfficeEdit.NewTimeZone, null, null, new { @class = "form-control", 
                                                @disabled = "disabled" })
                                        *@
                            </div>

                            <div class="form-group">
                                <label for="operating">Operating</label>
                                @Html.DropDownListFor(m => m.Offices[0].OperatingOptions, Model.Offices[0].OperatingOptions, null, new { @class = "form-control-static"
                                })

                            </div>

                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" onclick="check_newModal ();">Close</button>
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        </div>


                    </div>
                </div>
            </div>

            <script>
                function check_newModal () {
                    if (confirm('Are you sure you want to cancel. You will lose your unsaved changes')) {
                        $('#emptyModals').modal('hide');
                    }
                }
            </script>
        }
    </div>

    </div>
</div>
    <script language="JavaScript" type="text/javascript" src="/Scripts/jquery-1.10.2.js"></script>
    <script language="JavaScript" type="text/javascript" src="/Scripts/jquery-1.10.2.min.js"></script>

<script>

    function enablebody() {
        $('#body').css({
            'overflow-y': 'auto'
        });
    }

    function disablebody() {
        $('#body').css({
            'overflow-y': 'hidden'
        });
    }

    function modalCheck(x){
        if (confirm('Are you sure you want to cancel. You will lose your unsaved changes')) {
            $('#modal_' + x).modal('hide')
        }
    }

    function highlight(x) {
        try {
            if (x.value != x.defaultValue) {
                x.style.color = "red";
            }
        } catch (e) {
            alert(x);
        } 
    }

    function checkAll(id) {
        var name = document.getElementById('Office' + id);
        var address = document.getElementById('Address' + id);
        var country = document.getElementById('Country' + id);
        console.log("country Value: " + country + "Default: " + country);
        var switchboard = document.getElementById('Switchboard' + id);
        var fax = document.getElementById('Fax' + id);
        //var zone = document.getElementById('Timezone' + id);
        var operating = document.getElementById('Operating' + id);
        console.log("operating Value: " + operating + "Default: " + operating);

        console.log(operating);
        highlight(name);
        highlight(address);
        highlight(country);
        highlight(switchboard);
        highlight(fax);
        //highlight(zone);
        highlight(operating);
    }
    function toggleModal(x) {
        $('#plain_' + x).modal('show');
        enablebody();
    }

</script>

    

</body>